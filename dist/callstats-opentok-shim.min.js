"use strict";var CallstatsOpenTok=function(){function n(n,e,r){return function(i){if(null!==t){var a=t.webRTCFunctions[e];t.reportError(n,o,a)}return r(i)}}var e=new Map,t=null,r=function(){var n=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=(n+16*Math.random())%16|0;return("x"==e?t:3&t|8).toString(16)})},o=null,i=null,a=window.RTCPeerConnection||window.webkitRTCPeerConnection||window.mozRTCPeerConnection;if(a){var c=function(o,c){var s=new a(o,c),d=r(),u=void 0;if(u=void 0===o?"unknown":o.capableSimulcastStreams?"publisher":"subscriber",e.set(d,{peerConnection:s,kind:u}),null!==t){var l=t.fabricUsage.multiplex;t.addNewFabric(s,d,l,session.id,function(n,e){console.log("Monitoring status: "+n+" msg: "+e)})}else console.warn("Callstats not connected");var f=s.getStats.bind(s);s.getStats=function(n,e){return f(function(e){if(i&&i(d,s),n)return n(e)},e)};var p=s.createOffer.bind(s);s.createOffer=function(e,t,r){var o=n(s,"createOffer",t);return p(e,o,r)};var x=s.createAnswer.bind(s);s.createAnswer=function(e,t,r){var o=n(s,"createAnswer",t);return x(e,o,r)};var w=s.setLocalDescription.bind(s);s.setLocalDescription=function(e,t,r){var o=n(s,"setLocalDescription",r);return w(e,t,o)};var v=s.setRemoteDescription.bind(s);s.setRemoteDescription=function(e,t,r){var o=n(s,"setRemoteDescription",r);return v(e,t,o)};var C=s.addIceCandidate.bind(s);return s.addIceCandidate=function(e,t,r){var o=n(s,"addIceCandidate",r);return C(e,t,o)},s.onsignalingstatechange=function(n){"closed"==n.signalingState&&e.delete(d)},s};["RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection"].forEach(function(n){window.hasOwnProperty(n)&&(window[n]=c,Object.keys(a).forEach(function(e){window[n][e]=a[e]}),window[n].prototype=a.prototype)})}return{initialize:function(n){var e=null;"function"==typeof n.IdGenerator&&(r=n.IdGenerator),void 0!==n.AppId?void 0!==n.AppSecret?void 0!==n.SessionId?(o=n.SessionId,"function"==typeof n.OnConnection&&(i=n.OnConnection),void 0!==n.Id?e=n.Id:(console.info("Stats identifier not provided. Generating one ..."),e=r()),(t=new callstats).initialize(n.AppId,n.AppSecret,e)):console.error("callstats SessionId is required"):console.error("callstats AppSecret is required"):console.error("callstats AppId is required")},getConnections:function(){var n=new Map;return e.forEach(function(e,t){n.set(t,e)}),n}}}();
//# sourceMappingURL=callstats-opentok-shim.min.js.map