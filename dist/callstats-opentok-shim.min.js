"use strict";var CallstatsOpenTok=function(){function n(n,e){if(null!==o){var t=o.webRTCFunctions[e];o.reportError(n,a,t)}}function e(e,t,r){return function(o){return n(e,t),r(o)}}function t(){}var r=new Map,o=null,i=function(){var n=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=(n+16*Math.random())%16|0;return("x"==e?t:3&t|8).toString(16)})},a=null,c=null,s=window.RTCPeerConnection||window.webkitRTCPeerConnection||window.mozRTCPeerConnection;if(s){var d=function(d,l){var u=new s(d,l),f=i(),p=void 0;if(p=void 0===d?"unknown":d.capableSimulcastStreams?"publisher":"subscriber",r.set(f,{peerConnection:u,kind:p}),null!==o){var v=o.fabricUsage.multiplex;o.addNewFabric(u,f,v,a,function(n,e){console.log("Monitoring status: "+n+" msg: "+e)})}else console.warn("Callstats not connected");var x=u.getStats.bind(u);u.getStats=function(n,e){return x(function(e){if(c&&c(f,u),n)return n(e)},e)};var w=u.createOffer.bind(u);u.createOffer=function(){for(var t=arguments.length,r=Array(t),o=0;o<t;o++)r[o]=arguments[o];if(r.length<=1)return w.apply(void 0,r).catch(function(e){throw n(u,"createOffer"),e});var i=r[0],a=r[1],c=r[2];e(u,"createOffer",a);return w(i,a,c)};var g=u.createAnswer.bind(u);u.createAnswer=function(){for(var t=arguments.length,r=Array(t),o=0;o<t;o++)r[o]=arguments[o];if(r.length<=1)return g.apply(void 0,r).catch(function(e){throw n(u,"createAnswer"),e});var i=r[0],a=r[1],c=r[2];e(u,"createAnswer",a);return g(i,a,c)};var C=u.setLocalDescription.bind(u);u.setLocalDescription=function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t,i=e(u,"setLocalDescription",o);return C(n,r,i)};var h=u.setRemoteDescription.bind(u);u.setRemoteDescription=function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t;e(u,"setRemoteDescription",o);return h(n,r,o)};var b=u.addIceCandidate.bind(u);return u.addIceCandidate=function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t,i=e(u,"addIceCandidate",o);return b(n,r,i)},u.onsignalingstatechange=function(n){"closed"==n.signalingState&&r.delete(f)},u};["RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection"].forEach(function(n){window.hasOwnProperty(n)&&(window[n]=d,Object.keys(s).forEach(function(e){window[n][e]=s[e]}),window[n].prototype=s.prototype)})}return{initialize:function(n){var e=null;if("function"==typeof n.IdGenerator&&(i=n.IdGenerator),void 0!==n.AppId)if(void 0!==n.AppSecret){if(void 0!==n.SessionId)return a=n.SessionId,"function"==typeof n.OnConnection&&(c=n.OnConnection),void 0!==n.Id?e=n.Id:(console.info("Stats identifier not provided. Generating one ..."),e=i()),(o=new callstats).initialize(n.AppId,n.AppSecret,e),o;console.error("callstats SessionId is required")}else console.error("callstats AppSecret is required");else console.error("callstats AppId is required")},getConnections:function(){var n=new Map;return r.forEach(function(e,t){n.set(t,e)}),n}}}();
//# sourceMappingURL=callstats-opentok-shim.min.js.map